{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Calculator","props","clearScreen","setState","output","formula","lastResult","evalutated","decimal","del","console","log","state","handelClick","e","isOperator","RegExp","currentTarget","value","match","updateState","concat","includes","slice","replace","handleDecimal","_","eval","endsWithOperator","endsWithNegativeSign","test","evaluateMe","Math","round","this","className","Theme","Formula","Output","Buttons","clear","id","React","Component","onClick","setTheme","theme","targetClasses","classList","previousTheme","currenThemeNumber","previousThemeNumber","querySelector","toggle","type"],"mappings":"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","file":"static/js/main.17e6e405.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react';\r\n\r\n/**\r\n * this calculator uses the Formula/Expression Logic\r\n * EXAMPLE: 3 + 5 x 6 - 2 / 4 =\r\n * Immediate Execution Logic: 11.5\r\n * Formula/Expression Logic: 32.5\r\n */\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    /**\r\n     * As I input numbers, I should be able to see my input in the element with the id of display\r\n     * @param {string} output  fulfil this functionality\r\n     *\r\n     *\r\n     * When the decimal element is clicked, a . should append to the currently displayed value; two .\r\n     * in one number should not be accepted.\r\n     * @param {string} decimal  tell if the current number has . or not\r\n     *\r\n     * Pressing an operator immediately following = should start a new calculation\r\n     * that operates on the result of the previous evaluation.\r\n     * @param {string} evalutated tell  if = clicked or not\r\n     *\r\n     * @param {string} lastResult  store  the result of the previous evaluation.\r\n     */\r\n    this.state = {\r\n      output: \"0\",\r\n      formula: \"\",\r\n      lastResult: \"\",\r\n      evalutated: false,\r\n      decimal: false\r\n    }\r\n\r\n\r\n\r\n  }\r\n  /**\r\n   * pressing the clear button clears the input and output values, and returns the calculator to its initialized state;\r\n   * 0 should be shown in the element with the id of display.\r\n   */\r\n  clearScreen = () => {\r\n    this.setState({\r\n      output: \"0\",\r\n      formula: \"\",\r\n      lastResult: \"\",\r\n      evalutated: false,\r\n      decimal: false\r\n    }\r\n    )\r\n  }\r\n\r\n  // delete the last number  entered\r\n  del = () => {\r\n    // let newShit = str.slice(0, -1);\r\n    console.log(this.state);\r\n  }\r\n  handelClick = (e) => {\r\n    const isOperator = new RegExp('[+\\-/]')\r\n    let { output, formula, evalutated, lastResult, decimal } = this.state\r\n    if (e.currentTarget.value.match(isOperator)) {\r\n      this.state.decimal = false\r\n    }\r\n    /**\r\n     *  When inputting numbers, my calculator should not allow a number to begin with multiple zeros.\r\n     */\r\n    if (output === \"0\" && formula === \"\") {\r\n      this.updateState(e.currentTarget.value, e.currentTarget.value);\r\n\r\n    }\r\n    else if (output === \"0\" && formula != \"\") {\r\n      this.updateState(e.currentTarget.value, formula.concat(e.currentTarget.value));\r\n\r\n    }\r\n    /***\r\n     *  Pressing an operator immediately following = should start a new calculation\r\n     * that operates on the result of the previous evaluation.\r\n    */\r\n    else if (e.currentTarget.value.match(isOperator) && evalutated) {\r\n\r\n      output = lastResult + e.currentTarget.value;\r\n      this.setState({ evalutated: false })\r\n\r\n      this.updateState(output, output)\r\n    }\r\n    else if (!formula.includes(\"=\")) {\r\n      // hna\r\n      if (!formula.slice(-1).match(isOperator)) {\r\n        if (!decimal) {\r\n          this.updateState(e.currentTarget.value, formula.concat(e.currentTarget.value));\r\n        }\r\n        else if (decimal) {\r\n          output = output.concat(e.currentTarget.value)\r\n          this.updateState(output, formula.concat(e.currentTarget.value));\r\n\r\n        }\r\n      }\r\n      else if (formula.slice(-1).match(isOperator) && !e.currentTarget.value.match(isOperator)) {\r\n        this.updateState(e.currentTarget.value, formula.concat(e.currentTarget.value));\r\n        console.log('fuck');\r\n      }\r\n      /**\r\n       * If 2 or more operators are entered consecutively, the operation performed should be the last operator\r\n       *   entered (excluding the negative (-) sign).\r\n       * For example, if 5 + * 7 = is entered, the result should be 35 (i.e. 5 * 7);\r\n       * if 5 * - 5 = is entered, * the result should be -25 (i.e. 5 * (-5)).\r\n       * */\r\n      else if (formula.slice(-1).match(isOperator) && e.currentTarget.value.match(isOperator)) {\r\n        if (e.currentTarget.value.match(/‑/)) {\r\n          this.updateState(e.currentTarget.value, formula.concat(e.currentTarget.value))\r\n        } else {\r\n          this.setState({\r\n            formula: formula.slice(0, -1) + e.currentTarget.value,\r\n            output: e.currentTarget.value\r\n          })\r\n          this.updateState(e.currentTarget.value, formula.replace(/.$/, e.currentTarget.value))\r\n        }\r\n\r\n      }\r\n    }\r\n    else if (formula.includes(\"=\")) {\r\n      this.updateState(e.currentTarget.value, e.currentTarget.value)\r\n    }\r\n  }\r\n  handleDecimal = () => {\r\n    let { decimal, _ } = this.state\r\n    if (!decimal) {\r\n      let output = this.state.output.concat('.')\r\n      this.setState({\r\n        output: output,\r\n        formula: this.state.formula.concat('.'),\r\n        decimal: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when I hit =, the correct result should be shown in the element with the id of display.\r\n   * eval() handel this functionality\r\n\r\n   }\r\n   */\r\n  eval = () => {\r\n    let { formula, _ } = this.state, endsWithOperator = /[*+‑/]$/,\r\n      endsWithNegativeSign = /\\d[x/+‑]{1}‑$/\r\n    /** Never use eval()!,\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!\r\n     * */\r\n\r\n    while (endsWithOperator.test(formula) || endsWithNegativeSign.test(formula)) {\r\n      formula = formula.slice(0, -1);\r\n    }\r\n    while (formula.match(/[+|-|/|*]0/)) {\r\n      formula = formula.replace(\"+0\", \"+\")\r\n      formula = formula.replace(\"-0\", \"-\")\r\n      formula = formula.replace(\"/0\", \"/\")\r\n      formula = formula.replace(\"*0\", \"*\")\r\n    }\r\n\r\n    formula = formula.replace(/‑/g, \"-\").replace('--', '+').replace(/[+|*|/|-]0/g,)/** ?_? */\r\n    // console.log(formula)\r\n    let evaluateMe = Math.round(1000000000000 * eval(formula)) / 1000000000000;\r\n\r\n    this.setState({\r\n      output: evaluateMe,\r\n      formula: formula.concat(\"=\" + evaluateMe),\r\n      lastResult: evaluateMe,\r\n      evalutated: true\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  updateState(output, formula) {\r\n    this.setState({\r\n      output: output,\r\n      formula: formula\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"calculator\">\r\n          <Theme />\r\n          <div className=\"calculator__screen\">\r\n            <Formula formula={this.state.formula} />\r\n            <Output output={this.state.output} />\r\n          </div>\r\n          <Buttons clear={this.clearScreen}\r\n            handelClick={this.handelClick}\r\n            del={this.del}\r\n            eval={this.eval}\r\n            handleDecimal={this.handleDecimal}\r\n\r\n          />\r\n\r\n        </div>\r\n        <div id=\"note\">\r\n          this calculator uses the Formula/Expression Logic\r\n          EXAMPLE: <mark>3 + 5 x 6 - 2 / 4 =</mark><br />\r\n          Immediate Execution Logic: 11.5<br />\r\n          Formula/Expression Logic: <mark>32.5</mark><br />\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"key-container\">\r\n        <button id=\"seven\" className=\"btn btn-7\" onClick={this.props.handelClick} value=\"7\">7</button>\r\n        <button id=\"eight\" className=\"btn btn-8\" onClick={this.props.handelClick} value=\"8\">8</button>\r\n        <button id=\"nine\" className=\"btn btn-9\" onClick={this.props.handelClick} value=\"9\">9</button>\r\n        <button className=\"btn btn-blue btn-del\" onClick={this.props.del} >DEL</button>\r\n        <button id=\"four\" className=\"btn btn-4\" onClick={this.props.handelClick} value=\"4\">4</button>\r\n        <button id=\"five\" className=\"btn btn-5\" onClick={this.props.handelClick} value=\"5\">5</button>\r\n        <button id=\"six\" className=\"btn btn-6\" onClick={this.props.handelClick} value=\"6\">6</button>\r\n        <button id=\"add\"\r\n          onClick={this.props.handelClick}\r\n          className=\"operator btn  btn-add\"\r\n          value=\"+\"\r\n        >+</button>\r\n        <button id=\"one\" className=\"btn btn-1\" onClick={this.props.handelClick} value=\"1\">1</button>\r\n        <button id=\"two\" className=\"btn btn-2\" onClick={this.props.handelClick} value=\"2\">2</button>\r\n        <button id=\"three\" className=\"btn btn-3\" onClick={this.props.handelClick} value=\"3\">3</button>\r\n        <button id=\"subtract\"\r\n          onClick={this.props.handelClick}\r\n          className=\"operator btn  btn-sub\"\r\n          value=\"‑\">‑</button>\r\n        <button id=\"decimal\" className=\"btn btn-dec\" onClick={this.props.handleDecimal} value=\".\">.</button>\r\n        <button className=\"btn btn-0 \"\r\n          id=\"zero\"\r\n          onClick={this.props.handelClick}\r\n          value=\"0\"\r\n        >0</button>\r\n        <button id=\"divide\"\r\n          onClick={this.props.handelClick}\r\n          className=\"operator btn btn-div\"\r\n          value=\"/\"\r\n        >/</button>\r\n        <button id=\"multiply\"\r\n          onClick={this.props.handelClick}\r\n          className=\"operator btn btn-mul\"\r\n          value=\"*\"\r\n        >x</button>\r\n        <button className=\" btn btn-clr btn-lg\"\r\n          id=\"clear\"\r\n          onClick={this.props.clear}\r\n          value=\"AC\">clear{this.props.clear}</button>\r\n\r\n        <button id=\"equals\"\r\n          onClick={this.props.eval}\r\n          // style={equalsStyle}\r\n          value=\"=\" className=\"btn btn-eq btn-lg\"\r\n        >=</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n      <div className='calculator__screen-display' >\r\n        {this.props.output}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nclass Formula extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='calculator__screen-formula' >\r\n        {this.props.formula}\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n// theme switcher classs\r\nclass Theme extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    /**\r\n     * @param {string} theme  store  the  previous theme.\r\n     */\r\n    this.state = {\r\n      theme: 'theme-1'\r\n    }\r\n\r\n\r\n  }\r\n\r\n  setTheme = (theme) => {\r\n\r\n    const targetClasses = document.getElementById('root').classList\r\n    const previousTheme = this.state.theme\r\n    targetClasses.replace(previousTheme, theme)\r\n    this.setState({ theme })\r\n\r\n\r\n\r\n    // toggle active class to the the theme toggle theme\r\n\r\n    // select All the toggle btns\r\n\r\n    // get the theme number form the theme parametre (get the last character of a string )\r\n    const currenThemeNumber = theme.slice(-1)\r\n    const previousThemeNumber = previousTheme.slice(-1)\r\n\r\n    // add the 'active' class if the current button is corresponding to the current theme\r\n    // for example\r\n    // theme = 'them-1' the 'active' will be added to the toggle button  which has the class 'btn-toggle-1'\r\n    document.querySelector(`.btn-toggle-${currenThemeNumber}`).classList.toggle('active')\r\n\r\n    // remove the 'active' class if the current button is corresponding to the previous theme\r\n    document.querySelector(`.btn-toggle-${previousThemeNumber}`).classList.toggle('active')\r\n\r\n\r\n\r\n    // dumb version\r\n    // toggleBtns.forEach(btn => {\r\n    //   if (btn.classList.contains(`btn-toggle-${currenThemeNumber}`)) {\r\n    //     // add the 'active' class if the current button is corresponding to the current theme\r\n    //     // for example\r\n    //     // theme = 'them-1' the 'active' will be added to the toggle button  which has the class 'btn-toggle-1'\r\n    //     btn.classList.add('active')\r\n    //   }\r\n    //   else if (btn.classList.contains('active')) {\r\n    //     // remove the 'active' class if the current button is corresponding to the previous theme\r\n    //     btn.classList.remove('active')\r\n    //   }\r\n    // });\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"themes-container\" >\r\n        <p className=\"primary\">calc</p>\r\n        <div className=\"themes-toggle\">\r\n          <p className=\"secondary\">theme</p>\r\n          <div className=\"toggle\">\r\n            <div className=\"toggle-numbers\">\r\n              <span className=\"toggle-number\">1</span>\r\n              <span className=\"toggle-number\">2</span>\r\n              <span className=\"toggle-number\">3</span></div>\r\n            <div className=\"toggle-btns\">\r\n              <button className=\"btn-toggle btn-toggle-1 active\" type=\"button\" onClick={() => this.setTheme('theme-1')}></button>\r\n              <button className=\"btn-toggle btn-toggle-2\" type=\"button\" onClick={() => this.setTheme('theme-2')}></button>\r\n              <button className=\"btn-toggle btn-toggle-3\" type=\"button\" onClick={() => this.setTheme('theme-3')}></button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Calculator;\r\n"],"sourceRoot":""}